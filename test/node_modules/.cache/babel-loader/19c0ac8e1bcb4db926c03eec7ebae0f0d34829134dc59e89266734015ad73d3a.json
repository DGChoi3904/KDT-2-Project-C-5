{"ast":null,"code":"var _jsxFileName = \"/Users/jieun/Desktop/KDT-2-Project-C-5/test/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport LogoPage from \"./LogoPage\";\nimport LoginPage from \"./LoginPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [loggedIn, setLoggedIn] = useState(false);\n  //useState 훅을 사용해서 loggedin 상태를 관리한다.\n  //loggedIn은 사용자가 로그인하면 true로 설정되고, 그렇지 않으면 false로 유지된다.\n  const handleLogin = () => {\n    setLoggedIn(true);\n  };\n  //handleLogin 함수는 loggedIn 상태를 업데이트하는 데 사용. 클릭될 때 호출된다.\n\n  const handleGoBack = () => {\n    setLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: loggedIn ? /*#__PURE__*/_jsxDEV(LoginPage, {\n      handleLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(LogoPage, {\n        onClick: handleLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n//컴포넌트는 loggedIn 상태에 따라 렌더링됨.\n//만약 loggedIn이 true이면 LoginPage 컴포넌트가 렌더링되며, handleLogin 함수가 전달\n//만약 loggedIn이 false이면 LogoPage 컴포넌트가 렌더링, 로고를 클릭하면 handleLogin 함수가 호출\n_s(App, \"rumETxDPcQWJcg8a6Y55ZSVDz7g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","LogoPage","LoginPage","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","loggedIn","setLoggedIn","handleLogin","handleGoBack","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/jieun/Desktop/KDT-2-Project-C-5/test/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport LogoPage from \"./LogoPage\";\nimport LoginPage from \"./LoginPage\";\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  //useState 훅을 사용해서 loggedin 상태를 관리한다.\n  //loggedIn은 사용자가 로그인하면 true로 설정되고, 그렇지 않으면 false로 유지된다.\n  const handleLogin = () => {\n    setLoggedIn(true);\n  };\n  //handleLogin 함수는 loggedIn 상태를 업데이트하는 데 사용. 클릭될 때 호출된다.\n\n  const handleGoBack = () => {\n    setLoggedIn(false);\n  };\n  return (\n    <div className=\"App\">\n      {loggedIn ? (\n        <LoginPage handleLogin={handleLogin} />\n      ) : (\n        <>\n          <LogoPage onClick={handleLogin} />\n        </>\n      )}\n    </div>\n  );\n}\n//컴포넌트는 loggedIn 상태에 따라 렌더링됨.\n//만약 loggedIn이 true이면 LoginPage 컴포넌트가 렌더링되며, handleLogin 함수가 전달\n//만약 loggedIn이 false이면 LogoPage 컴포넌트가 렌더링, 로고를 클릭하면 handleLogin 함수가 호출\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC/C;EACA;EACA,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACxBD,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EACD;;EAEA,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzBF,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC;EACD,oBACEN,OAAA;IAAKS,SAAS,EAAC,KAAK;IAAAC,QAAA,EACjBL,QAAQ,gBACPL,OAAA,CAACF,SAAS;MAACS,WAAW,EAAEA;IAAY;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,gBAEvCd,OAAA,CAAAE,SAAA;MAAAQ,QAAA,eACEV,OAAA,CAACH,QAAQ;QAACkB,OAAO,EAAER;MAAY;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;EAErC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEV;AACA;AACA;AACA;AAAAV,EAAA,CA1BSD,GAAG;AAAAa,EAAA,GAAHb,GAAG;AA4BZ,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}