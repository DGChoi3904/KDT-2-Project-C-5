{"ast":null,"code":"var _jsxFileName = \"/Users/jieun/Desktop/KDT-2-Project-C-5/test/src/LoginPage.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n\n// const LoginPage = () => {\n//   const [id, setId] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n\n//   const handleIdChange = (event) => {\n//     setId(event.target.value);\n//   };\n\n//   const handlePasswordChange = (event) => {\n//     setPassword(event.target.value);\n//   };\n\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n//     console.log(`ID: ${id}, Password: ${password}`);\n//   };\n//   //로그인 버튼 클릭 시 호출되는 기능이다. 기본 양식 제출 동작을 방지하고 이메일과 암호를 콘솔에 기록.\n\n//   const handleGoogleLogin = () => {\n//     console.log(\"Google login clicked\");\n//   };\n//   //Google 함수 처리 handleGoogleLogin Google 로그인 버튼을 클릭하면 함수가 호출된다.\n//   // 새 탭에서 Google 로그인 페이지가 열림.\n\n//   const handleAppleLogin = () => {\n//     console.log(\"Apple login clicked\");\n//   };\n\n//   const handleForgotPassword = () => {\n//     console.log(\"Forgot password clicked\");\n//   };\n\n//   return (\n//     <div>\n//       <h1>Login Page</h1>\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//           ID:\n//           <input type=\"text\" value={id} onChange={handleIdChange} />\n//         </label>\n//         <br />\n//         <label>\n//           Password:\n//           <input\n//             type=\"password\"\n//             value={password}\n//             onChange={handlePasswordChange}\n//           />\n//         </label>\n//         <br />\n//         <button type=\"submit\">Login</button>\n//       </form>\n//       <button onClick={handleGoogleLogin}>Login with Google</button>\n//       <button onClick={handleAppleLogin}>Login with Apple</button>\n//       <button onClick={handleForgotPassword}>Forgot Password?</button>\n//     </div>\n//   );\n// };\n\n// export default LoginPage;\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage(props) {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleUsernameChange = event => {\n    setUsername(event.target.value);\n  };\n  const handlePasswordChange = event => {\n    setPassword(event.target.value);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    props.handleLogin(username, password);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"LoginPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: handleUsernameChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: handlePasswordChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"Lrw7JeD9zj6OUWhT/IH4OIvPKEk=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LoginPage","props","_s","username","setUsername","password","setPassword","handleUsernameChange","event","target","value","handlePasswordChange","handleSubmit","preventDefault","handleLogin","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["/Users/jieun/Desktop/KDT-2-Project-C-5/test/src/LoginPage.js"],"sourcesContent":["// import React, { useState } from \"react\";\n\n// const LoginPage = () => {\n//   const [id, setId] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n\n//   const handleIdChange = (event) => {\n//     setId(event.target.value);\n//   };\n\n//   const handlePasswordChange = (event) => {\n//     setPassword(event.target.value);\n//   };\n\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n//     console.log(`ID: ${id}, Password: ${password}`);\n//   };\n//   //로그인 버튼 클릭 시 호출되는 기능이다. 기본 양식 제출 동작을 방지하고 이메일과 암호를 콘솔에 기록.\n\n//   const handleGoogleLogin = () => {\n//     console.log(\"Google login clicked\");\n//   };\n//   //Google 함수 처리 handleGoogleLogin Google 로그인 버튼을 클릭하면 함수가 호출된다.\n//   // 새 탭에서 Google 로그인 페이지가 열림.\n\n//   const handleAppleLogin = () => {\n//     console.log(\"Apple login clicked\");\n//   };\n\n//   const handleForgotPassword = () => {\n//     console.log(\"Forgot password clicked\");\n//   };\n\n//   return (\n//     <div>\n//       <h1>Login Page</h1>\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//           ID:\n//           <input type=\"text\" value={id} onChange={handleIdChange} />\n//         </label>\n//         <br />\n//         <label>\n//           Password:\n//           <input\n//             type=\"password\"\n//             value={password}\n//             onChange={handlePasswordChange}\n//           />\n//         </label>\n//         <br />\n//         <button type=\"submit\">Login</button>\n//       </form>\n//       <button onClick={handleGoogleLogin}>Login with Google</button>\n//       <button onClick={handleAppleLogin}>Login with Apple</button>\n//       <button onClick={handleForgotPassword}>Forgot Password?</button>\n//     </div>\n//   );\n// };\n\n// export default LoginPage;\n\nimport React, { useState } from \"react\";\n\nfunction LoginPage(props) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleUsernameChange = (event) => {\n    setUsername(event.target.value);\n  };\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    props.handleLogin(username, password);\n  };\n\n  return (\n    <div className=\"LoginPage\">\n      <h1>Login</h1>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Username:\n          <input type=\"text\" value={username} onChange={handleUsernameChange} />\n        </label>\n        <br />\n        <label>\n          Password:\n          <input\n            type=\"password\"\n            value={password}\n            onChange={handlePasswordChange}\n          />\n        </label>\n        <br />\n        <button type=\"submit\">Log In</button>\n      </form>\n    </div>\n  );\n}\n\nexport default LoginPage;\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,SAASA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,oBAAoB,GAAIC,KAAK,IAAK;IACtCJ,WAAW,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EAED,MAAMC,oBAAoB,GAAIH,KAAK,IAAK;IACtCF,WAAW,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EAED,MAAME,YAAY,GAAIJ,KAAK,IAAK;IAC9BA,KAAK,CAACK,cAAc,EAAE;IACtBZ,KAAK,CAACa,WAAW,CAACX,QAAQ,EAAEE,QAAQ,CAAC;EACvC,CAAC;EAED,oBACEN,OAAA;IAAKgB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBjB,OAAA;MAAAiB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACdrB,OAAA;MAAMsB,QAAQ,EAAET,YAAa;MAAAI,QAAA,gBAC3BjB,OAAA;QAAAiB,QAAA,GAAO,WAEL,eAAAjB,OAAA;UAAOuB,IAAI,EAAC,MAAM;UAACZ,KAAK,EAAEP,QAAS;UAACoB,QAAQ,EAAEhB;QAAqB;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAChE,eACRrB,OAAA;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACNrB,OAAA;QAAAiB,QAAA,GAAO,WAEL,eAAAjB,OAAA;UACEuB,IAAI,EAAC,UAAU;UACfZ,KAAK,EAAEL,QAAS;UAChBkB,QAAQ,EAAEZ;QAAqB;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC/B;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACI,eACRrB,OAAA;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACNrB,OAAA;QAAQuB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAChC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEV;AAAClB,EAAA,CAvCQF,SAAS;AAAAwB,EAAA,GAATxB,SAAS;AAyClB,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}